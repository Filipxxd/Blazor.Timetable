@typeparam TType

<div class="dropdown-container">
    <label>@Label:</label>
    <select @bind="BoundValue">
        @foreach (var option in Options)
        {
            <option value="@option?.ToString()">@option</option>
        }
    </select>
    @if (!string.IsNullOrEmpty(ErrorMessage))
    {
        <div class="text-danger">@ErrorMessage</div>
    }
</div>

@code {
    [Parameter, EditorRequired] public TType[] Options { get; set; } = [];
    [Parameter, EditorRequired] public TType Value { get; set; } = default!;
    [Parameter, EditorRequired] public EventCallback<TType> ValueChanged { get; set; }
    [Parameter, EditorRequired] public string Label { get; set; } = default!;
    [Parameter] public string? ErrorMessage { get; set; }

    private TType BoundValue
    {
        get => Value;
        set
        {
            if (EqualityComparer<TType>.Default.Equals(Value, value)) return;

            Value = value;
            ValueChanged.InvokeAsync(value);
        }
    }
}