@typeparam TEvent where TEvent : class
@attribute [type: RenderModeInteractiveServer]

<div class="timetable-wrapper">
    <Options Events=@Events
             CurrentDisplayType=@_timetableManager.DisplayType
             ExportConfig=@ExportConfig
             TimetableConfig=@TimetableConfig
             OnDisplayTypeChanged=HandleDisplayTypeChanged />

    <div class="timetable">
        <Header Config=@TimetableConfig
                Title=@_timetableManager.Grid.Title
                OnNextClicked=HandleNextClicked
                OnPreviousClicked=HandlePreviousClicked />

        <div class="timetable-content">
            <div class="timetable-head">
                <div class="timetable-time-column"></div>
                @foreach (var column in _timetableManager.Grid.Columns)
                {
                    <div class="timetable-head-cell" @onclick="() => HandleChangedToDay(column.DayOfWeek)">
                        @DateHelper.GetWeekDayName(column.DayOfWeek).Capitalize()
                    </div>
                }
            </div>

            @if (_timetableManager.DisplayType == DisplayType.Day || _timetableManager.DisplayType == DisplayType.Week)
            {
                <div class="timetable-grid">
                    @* Grid (borders + dragdrop containers) *@

                    @for (var columnIndex = 1; columnIndex < _timetableManager.Grid.Columns.Count; columnIndex++)
                    {
                        @for (var cellIndex = 0; cellIndex < _timetableManager.Grid.Columns[columnIndex - 1].Cells.Count; cellIndex++)
                        {
                            var cell = _timetableManager.Grid.Columns[columnIndex - 1].Cells[cellIndex];

                            if (cell.IsHeaderCell)
                            {
                                <div class="timetable-body-cell"
                                    style="grid-column:@(cell.ColumnIndex + 1); grid-row: 1;">
                                </div>
                            }
                            else
                            {
                                <div class="timetable-body-cell"
                                    data-slot-id="@cell.Id"
                                    style="grid-column:@(cell.ColumnIndex + 1); grid-row:@(cell.RowIndex);">
                                </div>
                            }
                        }
                    }

                    @foreach(var cell in _timetableManager.Grid.Columns.SelectMany(x => x.Cells))
                    {
                        if (cell.IsHeaderCell)
                        {
                            <div class="timetable-body-cell"
                                 style="grid-column:@(cell.ColumnIndex + 1); grid-row: 1;">
                            </div>
                        }
                        else
                        {
                            <div class="timetable-body-cell"
                                 data-slot-id="@cell.Id"
                                 style="grid-column:@(cell.ColumnIndex + 1); grid-row:@(cell.RowIndex);">
                            </div>
                        }
                    }

                    @for (var i = 0; i <= _timetableManager.Grid.RowHeader.Count; i++)
                    {
                        <div class="timetable-body-cell"
                             style="grid-column: 1; grid-row:@(i + 1);">
                        </div>
                    }

                    @for (var i = 0; i < _timetableManager.Grid.RowHeader.Count; i++)
                    {
                        <div style="grid-column: 1; grid-row: @(i + 2);">
                            @(_timetableManager.Grid.RowHeader[i])
                         </div>
                    }

                    @* DragDropable events *@
                    @foreach (var column in _timetableManager.Grid.Columns)
                    {
                        foreach (var cell in column.Cells)
                        {
                            foreach (var cellEvent in cell.Events)
                            {
                                <TimetableEvent EventId="@cellEvent.Id"
                                                Title="@cellEvent.Title"
                                                IsHeaderEvent="@cell.IsHeaderCell"
                                                Span="@cellEvent.Span"
                                                DetailTemplate=@(builder => DetailTemplate(cellEvent.Event)(builder))
                                                DayColumn="@cell.ColumnIndex"
                                                StartSlot="@(cell.RowIndex)" />
                            }
                        }
                    }
                </div>
            }
            else
            {
                
            }
                
        </div>
    </div>
</div>