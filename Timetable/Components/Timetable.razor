@using Timetable.Common.Extensions
@typeparam TEvent where TEvent : class

@attribute [type: RenderModeInteractiveServer]

<div class="timetable-wrapper">
    <Options Events=@Events
             ExportConfig=@ExportConfig
             TimetableConfig=@TimetableConfig
             OnDisplayTypeChanged=@OnDisplayTypeChanged />

    <div class="timetable">
        <Header Config=@TimetableConfig
                Title=@_timetableManager.Grid.Title
                OnNextClicked=@HandleNextClicked
                OnPreviousClicked=@HandlePreviousClicked />

        <div class="timetable-content">
            <div class="timetable-head">
                <div class="timetable-time-column"></div>
                @{
                    var startOfWeek = DateHelper.GetStartOfWeekDate(_timetableManager.CurrentDate, TimetableConfig.Days.First());
                }
                @foreach (var column in _timetableManager.Grid.Columns)
                {
                    var dateForDay = DateHelper.GetDateForDay(startOfWeek, column.DayOfWeek);
                    <div class="timetable-head-cell" @onclick="() => HandleChangedToDay(column.DayOfWeek)">
                        @dateForDay.ToString("dddd").Capitalize()
                    </div>
                }
            </div>

            <div class="timetable-grid">
                <div class="timetable-row">
                    <div class="timetable-time-column"></div>
                    @foreach (var column in _timetableManager.Grid.Columns)
                    {
                        <div class="timetable-whole-day-cell" data-slot-id="@column.HeaderCell.Id" @key="@column.HeaderCell.Id">
                            @foreach (var headerEvent in column.HeaderCell.Events)
                            {
                                <TimetableEvent EventId=@headerEvent.Id
                                                Title=@headerEvent.Title
                                                IsWholeDay=true
                                                Span=@headerEvent.Span
                                                DetailTemplate=@(builder => DetailTemplate(headerEvent.Event)(builder)) />
                            }
                        </div>
                    }
                </div>

                @for (int i = 0; i < _timetableManager.Grid.RowPrepend.Count; i++)
                {
                    <div class="timetable-row">
                        <div class="timetable-time-column">
                            @_timetableManager.Grid.RowPrepend[i]
                        </div>
                        @foreach (var column in _timetableManager.Grid.Columns)
                        {
                            var cell = column.Cells[i];
                            <div class="timetable-body-cell" data-slot-id="@cell.Id" @key="@cell.Id">
                                @foreach (var cellEvent in cell.Events)
                                {
                                    <TimetableEvent EventId=@cellEvent.Id
                                                    Title=@cellEvent.Title
                                                    DetailTemplate=@(builder => DetailTemplate(cellEvent.Event)(builder))
                                                    Span=@cellEvent.Span />
                                }
                            </div>
                        }
                    </div>
                }
            </div>
        </div>
    </div>
</div>