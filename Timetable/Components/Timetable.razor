@typeparam TEvent where TEvent : class
@attribute [type: RenderModeInteractiveServer]

<div class="timetable-wrapper">
    <Options 
        Events=@Events
        CurrentDisplayType=@_timetableManager.DisplayType
        ExportConfig=@ExportConfig
        TimetableConfig=@TimetableConfig
        OnDisplayTypeChanged=HandleDisplayTypeChanged />

    <div class="timetable">
        <Header 
            Config=@TimetableConfig
            Title=@_timetableManager.Grid.Title
            OnNextClicked=HandleNextClicked
            OnPreviousClicked=HandlePreviousClicked />

        <div class="timetable-content">
            @if (_timetableManager.DisplayType == DisplayType.Week || _timetableManager.DisplayType == DisplayType.Day)
            {
                <div class="timetable-head">
                    <div class="timetable-time-column"></div>
                    @foreach (var column in _timetableManager.Grid.Columns)
                    {
                        <div class="timetable-head-cell" @onclick="() => HandleChangedToDay(column.DayOfWeek)">
                            @DateHelper.GetWeekDayName(column.DayOfWeek).Capitalize()
                        </div>
                    }
                </div>

                <div class="timetable-grid" style="grid-template-columns: 80px repeat(@(_timetableManager.Grid.Columns.Count), 1fr); grid-auto-rows: minmax(50px, auto);">
                    @for (var i = 1; i <= _timetableManager.Grid.RowHeader.Count + 1; i++)
                    {
                        <div class="timetable-body-cell" style="@($"grid-column: 1; grid-row: {i};")"></div>

                        @if (i > 1)
                        {                            
                            <div class="timetable-row-header" style="@($"grid-column: 1; grid-row: {i};")">
                                @_timetableManager.Grid.RowHeader[i - 2]
                            </div>
                        }
                    }

                    @foreach (var cell in _timetableManager.Grid.Columns.SelectMany(column => column.Cells))
                    {
                        <div class="timetable-body-cell"
                             data-slot-id="@(!cell.IsHeaderCell ? cell.Id.ToString() : null)"
                             style="@($"grid-column: {cell.ColumnIndex + 1}; grid-row: {cell.RowIndex};")"></div>
                    }

                    @foreach (var cell in _timetableManager.Grid.Columns.SelectMany(column => column.Cells))
                    {
                        var sortedEvents = cell.Events.OrderByDescending(x => x.Span).ToList();

                        foreach (var cellEvent in cell.Events)
                        {
                            <TimetableEvent 
                                EventId=@cellEvent.Id
                                Title=@cellEvent.Title
                                Order=@sortedEvents.IndexOf(cellEvent)
                                IsHeaderEvent=@cell.IsHeaderCell
                                NumberOfEvents=@cell.Events.Count
                                Span=@cellEvent.Span
                                DetailTemplate=@((builder) => DetailTemplate(cellEvent.Event)(builder))
                                EditTemplate=@((builder) => EditTemplate(cellEvent.Event)(builder))
                                DeleteTemplate=@((builder) => DeleteTemplate(cellEvent.Event)(builder))
                                DayColumn=@cell.ColumnIndex
                                StartSlot=@cell.RowIndex />
                        }
                    }

                </div>
            }
        </div>
    </div>
</div>