@typeparam TEvent where TEvent : class

<CascadingValue Name="RegisterValidation" IsFixed Value=@((Action<Func<bool>>)RegisterValidation)>
    <CascadingValue Name="StateChanged" IsFixed Value=@((Action)StateHasChanged)>
        <div class="modal-container">
            @if (State == EventModalState.Create || State == EventModalState.Edit)
            {
                <Input Model=EventDescriptor
                       Label=@Localizer["EventTitle"]
                       Selector="x => x.Title" 
                       Validate=ValidateTitle />

                <InputDateTime Model=EventDescriptor 
                               Label=@Localizer["EventStart"]
                               Selector="x => x.DateFrom" 
                               Validate=ValidateDateFrom />

                <InputDateTime Model=EventDescriptor
                               Label=@Localizer["EventEnd"]
                               Selector="x => x.DateTo" 
                               Validate=ValidateDateTo />

                @if (AdditionalFields != null)
                {
                    @AdditionalFields(EventDescriptor.Event)
                }

                @if (State == EventModalState.Create)
                {
                    <Dropdown Model=this
                              Label=@Localizer["RepetitionType"]
                              Selector="x => x.SelectedRepeatability"
                              Options=RepetitionOptions />

                    @if (SelectedRepeatability != Repeatability.Once)
                    {
                        <InputDateTime Model=this
                                       Label=@Localizer["EventRepeatUntil"]
                                       Selector="x => x.RepeatUntil" 
                                       Type=InputDateType.Date
                                       Validate=ValidateRepeatUntilDate />
                    }

                    @if (SelectedRepeatability == Repeatability.Custom)
                    {
                        <div style="margin-top: 0.5rem;">
                            <label>@Localizer["EventRepeatCustomDays"]:</label>
                            <input type="number" class="form-control" @bind=RepeatAfterDays min="1" />
                        </div>
                    }
                }
                
                @if (EventDescriptor.HasGroupdAssigned)
                {
                    <Dropdown Model=this
                              Label=@Localizer["ActionScope"]
                              Selector="x => x.SelectedScope"
                              Options=Scopes />
                }

                <div style="margin-top: 1rem">
                    <Button Title=@Localizer["ButtonSave"]
                            OnClick=SaveAsync 
                            ButtonType=ButtonType.Confirm />

                    @if (State == EventModalState.Edit)
                    {
                        <Button Title=@Localizer["ButtonDelete"]
                                OnClick=ToggleDelete 
                                ButtonType=ButtonType.Delete 
                                Style="margin-left: 1rem;" />
                    }
                </div>
            }
            else
            {
                @if (EventDescriptor.HasGroupdAssigned)
                {
                    <Dropdown Model=this
                              Label=@Localizer["ActionScope"]
                              Selector="x => x.SelectedScope" 
                              Options=Scopes />
                }

                <div>
                    <Button Title=@Localizer["ButtonDelete"]
                            OnClick=DeleteAsync 
                            ButtonType=ButtonType.Delete />

                    <Button Title=@Localizer["ButtonCancel"]
                            OnClick=ModalService.Close 
                            ButtonType=ButtonType.Cancel 
                            Style="margin-left: 1rem;" />
                </div>
            }
        </div>
    </CascadingValue>
</CascadingValue>