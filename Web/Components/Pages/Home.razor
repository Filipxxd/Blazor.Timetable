@page "/"
@using System.Collections.ObjectModel
@using System.Linq.Expressions
@using Timetable.Components
@using Timetable.Common.Enums
@using Timetable.Components.Shared.Forms
@using Timetable.Models
@rendermode InteractiveServer

<PageTitle>Example page</PageTitle>

<Timetable @bind-Events=Events 
           TEvent=TimetableEvent
           Title="e => e.Title"
           DateFrom="e => e.StartTime"
           DateTo="e => e.EndTime"
           GroupId="e => e.GroupId"
           AdditionalProps=@([x => x.Description, x => x.Occupancy])

           TimetableConfig="new(){
                DefaultDisplayType=DisplayType.Week,
                DisplayTypes=[DisplayType.Week, DisplayType.Month, DisplayType.Day],
                Days=[ DayOfWeek.Sunday, DayOfWeek.Monday, DayOfWeek.Tuesday, DayOfWeek.Wednesday, DayOfWeek.Thursday, DayOfWeek.Friday],
                TimeFrom=new(8, 0),
                TimeTo=new(22, 0),
                Is24HourFormat=true
            }"

            OnEventChanged=HandleEventChanged
            OnPreviousClicked=HandlePreviousClicked 
            OnNextClicked=HandleNextClicked>
    <AdditionalFields>
        <Input Model=@context
               Label="Description"
               Selector="x => x.Description"
               Validate=@(value => string.IsNullOrWhiteSpace(value) ? "Description cannot be empty" : null) />

        <ExampleCustomInput Model="@context"
                            Label="Maximum Occupancy" 
                            Selector="x => x.Occupancy" 
                            Validate=@(value => value <= 0 ? "At least 1" : null) />
    </AdditionalFields>
</Timetable>

@code{
    public IList<TimetableEvent> Events { get; set; } = new EventGenerator().GenerateHardcodedEvents();

    public void HandleNextClicked()
    {
        // TODO: Custom behaviour
    }

    public void HandlePreviousClicked()
    {
        // TODO: Custom behaviour
    }
    
    public void HandleEventChanged(TimetableEvent timetableEvent){
        // TODO: Update the event in the database
    }
}