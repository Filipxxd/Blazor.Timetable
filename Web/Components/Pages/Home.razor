@page "/"
@using School_Timetable
@using School_Timetable.Enums
@rendermode InteractiveServer

<PageTitle>Home</PageTitle>

<TimetableComponent TEvent=TimetableEvent 
                    Events=TestEvents
                    
                    Title="e => e.Title"
                    DateFrom="e => e.StartTime"
                    DateTo="e => e.EndTime"

                    TimetableConfig="new(){
                        DefaultDisplayType = DisplayType.Week,
                        SelectedDays=[DayOfWeek.Monday, DayOfWeek.Tuesday, DayOfWeek.Wednesday, DayOfWeek.Thursday, DayOfWeek.Friday],
                        TimeFrom=new(8, 0),
                        TimeTo=new(16, 0),
                    }"
                    
                    OnEventChanged=HandleEventMoved
                    OnPreviousClicked=HandlePreviousClicked 
                    OnNextClicked=HandleNextClicked>
    <DetailTemplate Context="timetableEvent">
        <div>
            <p>Custom Event View</p>
            <p><strong>Start:</strong> @timetableEvent.StartTime.ToString("g")</p>
            <p><strong>End:</strong> @timetableEvent.EndTime.ToString("g")</p>
            <p>@timetableEvent.Description</p>
        </div>
    </DetailTemplate>
</TimetableComponent>

@code{
    static readonly DateTime TodayMidnight = DateTime.Today;

    public List<TimetableEvent> TestEvents =
    [
        new TimetableEvent
        {
            Id = 1,
            Title = "Math Class",
            StartTime = TodayMidnight.AddDays(1).AddHours(9),
            EndTime = TodayMidnight.AddDays(1).AddHours(15),
            Description = "Algebra and Geometry"
        },
        new TimetableEvent
        {
            Id = 2,
            Title = "A very long text to test out wrapping",
            StartTime = TodayMidnight.AddDays(1).AddHours(11),
            EndTime = TodayMidnight.AddDays(1).AddHours(12),
            Description = "Physics and Chemistry"
        },
        new TimetableEvent
        {
            Id = 3,
            Title = "A very long text to test out wrapping",
            StartTime = TodayMidnight.AddDays(0).AddHours(13), 
            EndTime = TodayMidnight.AddDays(0).AddHours(14), 
            Description = "World War II"
        },
        new TimetableEvent
        {
            Id = 4,
            Title = "Art Class",
            StartTime = TodayMidnight.AddDays(2).AddHours(9), 
            EndTime = TodayMidnight.AddDays(2).AddHours(10), 
            Description = "Painting and Sculpture"
        },
        new TimetableEvent
        {
            Id = 5,
            Title = "English Class",
            StartTime = TodayMidnight.AddDays(3).AddHours(8.5),
            EndTime = TodayMidnight.AddDays(3).AddHours(9.5),
            Description = "Literature"
        }
    ];

    public void HandleNextClicked()
    {
        TestEvents =
        [
            new TimetableEvent
            {
                Id = 1,
                Title = "Math Class",
                StartTime = TodayMidnight.AddHours(9),
                EndTime = TodayMidnight.AddHours(11),
                Description = "Algebra and Geometry"
            },
            new TimetableEvent
            {
                Id = 2,
                Title = "Science Class",
                StartTime = TodayMidnight.AddHours(11),
                EndTime = TodayMidnight.AddHours(12),
                Description = "Physics and Chemistry"
            },
            new TimetableEvent
            {
                Id = 3,
                Title = "A very long text to test out wrapping",
                StartTime = TodayMidnight.AddDays(1).AddHours(13),
                EndTime = TodayMidnight.AddDays(1).AddHours(14),
                Description = "World War II"
            },
            new TimetableEvent
            {
                Id = 4,
                Title = "Art Class",
                StartTime = TodayMidnight.AddDays(2).AddHours(9),
                EndTime = TodayMidnight.AddDays(2).AddHours(10),
                Description = "Painting and Sculpture"
            },
            new TimetableEvent
            {
                Id = 5,
                Title = "English Class",
                StartTime = TodayMidnight.AddDays(3).AddHours(8.5),
                EndTime = TodayMidnight.AddDays(3).AddHours(9.5),
                Description = "Literature"
            }
        ];
    }

    public void HandlePreviousClicked()
    {
        TestEvents =
        [
            new TimetableEvent
            {
                Id = 100,
                Title = "Math Class",
                StartTime = TodayMidnight.AddDays(-3).AddHours(9),
                EndTime = TodayMidnight.AddDays(-3).AddHours(11),
                Description = "Algebra and Geometry"
            },
            new TimetableEvent
            {
                Id = 200,
                Title = "Science Class",
                StartTime = TodayMidnight.AddDays(-2).AddHours(11),
                EndTime = TodayMidnight.AddDays(-2).AddHours(12),
                Description = "Physics and Chemistry"
            }
        ];
    }

    public void HandleEventMoved(TimetableEvent timetableEvent){
        // TODO: Update the event in the database
    }

}